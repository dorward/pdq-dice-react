@import '@blueprintjs/core/lib/scss/variables';

html,
body {
	background: $blue1;
}

#root {
	background: white;
	box-sizing: border-box;
	max-width: 800px;
	min-height: 100vh;
	margin: 0 0 0 2em;
	padding: 0 1em;
	> header {
		display: flex;
		> h1 {
			flex: 1 0 auto;
		}
		> .userMenu {
			flex: 0 1 auto;
			> button {
				> span {
					display: flex;
					> span {
						padding-right: 3px;
					}
				}
			}
		}
	}
}

@media only screen and (max-width: 840px) {
	#root {
		margin: 0 2px;
		max-width: 100%;
	}
}

.results {
	width: 400px;
	min-height: 22em;
	text-align: center;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	table {
		margin: auto;
	}
	.bp3-button-group {
		margin-top: 2em;
		justify-content: center;
	}
}

.tiny {
	margin: 3px auto;
	max-width: 30em;
}

.center {
	display: block;
	margin: auto;
}

.h-center {
	margin: auto;
}

.v-center {
	height: 100vh;
	padding: 0;
	margin: auto;
	display: flex;
	flex-direction: column;
	justify-content: center;
	width: 100%;
}

main.tiny {
	border: solid $pt-divider-black 1px;
	margin: 0 auto;
	padding: 1ex;

	h1 {
		text-align: center;
	}
}

.character-menu {
	display: flex;
	justify-content: space-between;
}

table.attributes,
table.extras {
	table-layout: fixed;
	width: 100%;
	margin: 1em 0;

	.bp3-form-group {
		margin: 0;
		input {
			background: inherit;
		}
	}

	tr {
		&.wounded {
			background: $red5;
		}

		&:nth-child(even) {
			background: $light-gray3;
			&.wounded {
				background: $red4;
			}
		}
	}

	th,
	td {
		padding: 4px;
		vertical-align: middle;
	}
	td + td,
	th + th {
		width: 50px;
		text-align: center;
	}

	&.edit {
		td + td,
		th + th {
			width: 100px;
			text-align: center;
		}
	}
}

button.add {
	margin-left: 1em;
}

.attribute-row-label {
	display: block;
}

.controls {
	padding: 4px;
	label {
		color: $dark-gray1;
		font-weight: 600;
	}
}

.bp3-button-group:not(.bp3-minimal) > .bp3-button:not(:last-child).skill-check {
	margin-right: 1em;
}

svg.goo {
	margin: auto;
	display: block;

	* {
		transform-origin: 50%;
	}

	g {
		animation: left 8s linear infinite;
	}

	circle:first-child {
		animation: right 2s linear infinite;
	}

	@keyframes left {
		100% {
			transform: rotate(-360deg);
		}
	}

	@keyframes right {
		100% {
			transform: rotate(360deg);
		}
	}
}
